services:
  postgres:
    image: postgres:15-alpine
    container_name: solfolio-postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-solfolio}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-devpassword}
      POSTGRES_DB: ${POSTGRES_DB:-solfolio_dev}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-solfolio}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - solfolio-network

  redis:
    image: redis:7-alpine
    container_name: solfolio-redis
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - solfolio-network

  envoy:
    build:
      context: ./envoy
      dockerfile: Dockerfile
    container_name: solfolio-envoy
    ports:
      - "8080:8080"  # gRPC-Web port
      - "9901:9901"  # Admin interface
    depends_on:
      - backend
    networks:
      - solfolio-network

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    container_name: solfolio-backend
    dns:
      - 8.8.8.8
      - 8.8.4.4
    environment:
      NODE_ENV: development
      PORT: ${BACKEND_PORT:-3001}
      CORS_ORIGIN: http://localhost:3000
      GRPC_PORT: ${GRPC_PORT:-50051}
      WEBSOCKET_PORT: ${WEBSOCKET_PORT:-3001}  # WebSocket runs on same port
      DATABASE_URL: postgresql://${POSTGRES_USER:-solfolio}:${POSTGRES_PASSWORD:-devpassword}@postgres:5432/${POSTGRES_DB:-solfolio_dev}
      REDIS_URL: redis://redis:6379
      HELIUS_API_KEY: ${HELIUS_API_KEY}
      HELIUS_RPC_URL: ${HELIUS_RPC_URL}
      SOLANA_NETWORK: ${SOLANA_NETWORK:-devnet}
      JUPITER_API_URL: ${JUPITER_API_URL:-https://price.jup.ag/v4}
      FRONTEND_URL: ${FRONTEND_URL:-http://localhost:3000}
    env_file:
      - .env
    ports:
      - "3001:3001"  # HTTP + WebSocket port
      - "50051:50051"  # gRPC port
    volumes:
      - ./backend:/app
      - /app/node_modules
      - ./proto:/proto
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - solfolio-network

  frontend:
    build:
      context: .
      dockerfile: frontend/Dockerfile.dev
    container_name: solfolio-frontend
    environment:
      NODE_ENV: development
      NEXT_PUBLIC_GRPC_WEB_URL: ${NEXT_PUBLIC_GRPC_WEB_URL:-http://localhost:8080}
      NEXT_PUBLIC_WEBSOCKET_URL: ${NEXT_PUBLIC_WEBSOCKET_URL:-ws://localhost:3001}  # WebSocket on backend port
      NEXT_PUBLIC_API_URL: ${NEXT_PUBLIC_API_URL:-http://localhost:3001}
      NEXT_PUBLIC_SOLANA_NETWORK: ${NEXT_PUBLIC_SOLANA_NETWORK:-devnet}
      NEXT_PUBLIC_HELIUS_RPC_URL: ${NEXT_PUBLIC_HELIUS_RPC_URL}
      NEXT_PUBLIC_CUSTOM_RPC_URL: ${NEXT_PUBLIC_CUSTOM_RPC_URL}
    env_file:
      - .env
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app/frontend
      - /app/frontend/node_modules
      - /app/frontend/.next
    depends_on:
      - envoy
      - backend  # Depend on backend instead of websocket
    networks:
      - solfolio-network
    command: pnpm run dev

  # Development tools
  adminer:
    image: adminer:latest
    container_name: solfolio-adminer
    ports:
      - "8082:8080"
    depends_on:
      - postgres
    networks:
      - solfolio-network
    profiles:
      - tools

  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: solfolio-redis-commander
    environment:
      REDIS_HOSTS: local:redis:6379
    ports:
      - "8083:8081"
    depends_on:
      - redis
    networks:
      - solfolio-network
    profiles:
      - tools

networks:
  solfolio-network:
    driver: bridge

volumes:
  postgres_data:
  redis_data: