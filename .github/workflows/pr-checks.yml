name: PR Checks

on:
  pull_request:
    branches: [main]
  push:
    branches: [main]

jobs:
  frontend-checks:
    name: Frontend Tests & Linting
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          
      - name: Setup pnpm
        uses: pnpm/action-setup@v4
          
      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV
          
      - name: Setup pnpm cache
        uses: actions/cache@v4
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-
            
      - name: Install dependencies
        working-directory: ./frontend
        run: pnpm install --frozen-lockfile
        
      - name: Run linting
        working-directory: ./frontend
        run: pnpm run lint
        
      - name: Run type checking
        working-directory: ./frontend
        run: pnpm run typecheck || npx tsc --noEmit
        
      - name: Run unit tests
        working-directory: ./frontend
        run: pnpm run test --passWithNoTests
        
      - name: Build frontend
        working-directory: ./frontend
        run: pnpm run build

  backend-checks:
    name: Backend Tests & Linting
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          
      - name: Setup pnpm
        uses: pnpm/action-setup@v4
          
      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV
          
      - name: Setup pnpm cache
        uses: actions/cache@v4
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-
            
      - name: Install dependencies
        working-directory: ./backend
        run: pnpm install --frozen-lockfile
        
      - name: Run linting
        working-directory: ./backend
        run: pnpm run lint
        
      - name: Run unit tests
        working-directory: ./backend
        run: pnpm run test --passWithNoTests
        
      - name: Build backend
        working-directory: ./backend
        run: pnpm run build

  e2e-tests:
    name: E2E Tests
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          
      - name: Setup pnpm
        uses: pnpm/action-setup@v4
          
      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV
          
      - name: Setup pnpm cache
        uses: actions/cache@v4
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-
            
      - name: Install frontend dependencies
        working-directory: ./frontend
        run: pnpm install --frozen-lockfile
        
      - name: Install Playwright browsers
        working-directory: ./frontend
        run: npx playwright install --with-deps chromium
        
      - name: Build frontend for E2E
        working-directory: ./frontend
        run: pnpm run build
        
      - name: Run E2E tests
        working-directory: ./frontend
        run: pnpm run test:e2e
        
      - name: Upload test results
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: frontend/playwright-report/
          retention-days: 7

  docker-build:
    name: Docker Build Test
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        
      - name: Build backend Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./backend
          file: ./backend/Dockerfile
          push: false
          tags: solfolio/backend:test
          cache-from: type=gha
          cache-to: type=gha,mode=max