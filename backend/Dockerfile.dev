FROM node:22-alpine

WORKDIR /app

# Install build dependencies for native modules
RUN apk add --no-cache python3 make g++ py3-pip linux-headers

# Install pnpm
RUN corepack enable && corepack prepare pnpm@9.14.2 --activate

# Copy workspace files from parent
COPY pnpm-lock.yaml pnpm-workspace.yaml ./
COPY backend/package.json ./backend/

# Set working directory to backend
WORKDIR /app/backend

# Install dependencies (including dev dependencies for ts-node)
RUN pnpm install --frozen-lockfile

# Note: Source code is mounted via docker-compose volumes, not copied

# Generate Prisma client (if using Prisma)
# This would need the schema file, but since we're mounting volumes,
# the prisma generate should be done at runtime instead
# RUN pnpm prisma generate

# Expose port
EXPOSE 3001

# Start development server
CMD ["pnpm", "run", "start:dev"]